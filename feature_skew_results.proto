// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// =============================================================================
syntax = "proto3";

package tensorflow.data_validation;

import "tensorflow/core/example/example.proto";

// Skew information for a particular feature.
message FeatureSkew {
  // Name of the feature.
  string feature_name = 1;

  // All of the counts are with respect to the set of tensorflow examples
  // which are found in **BOTH** the training and serving data.
  // Number of examples in training and serving where this feature is present.
  uint64 training_count = 2;
  uint64 serving_count = 3;

  // Number of examples where feature is present in both training and
  // serving data, and the feature value matches exactly.
  uint64 match_count = 4;

  // Number of times feature is present for training or serving only.
  uint64 training_only = 5;
  uint64 serving_only = 6;

  // Total number of examples where the feature is present in both
  // training and serving but the feature value does not match.
  uint64 mismatch_count = 7;

  // diff_count == training_only + serving_only + mismatch_count
  uint64 diff_count = 8;
}

// Message to store a pair of tensorflow examples which exhibit some skew.
message SkewPair {
  // Training example as it appears in training data.
  tensorflow.Example training = 1;

  // Serving example with the same identifier as that of the training.
  tensorflow.Example serving = 2;

  // Features that appear in the training example but not in serving.
  repeated string training_only_features = 3;

  // Features that appear in the serving example but not in training.
  repeated string serving_only_features = 4;

  // Features that appear in both training and serving example, and their
  // feature values are matched.
  repeated string matched_features = 5;

  // Features that appear in both training and serving example, and their
  // feature values do not match.
  repeated string mismatched_features = 6;
}
